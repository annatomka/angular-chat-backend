swagger: '2.0'


info:
  version: "1.0.0"
  title: Angular Chat Example API
  
paths:
  /account/me:
    get: 
      tags: 
        - user
        - get
        - me
      summary: Get current user. 
      description: ""
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
  /account/register:
    post:
      tags: 
        - user
        - post
        - register
      description: | 
        Register new user.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that should be created
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: Invalid input
        "200":
          description: successful operation
  /users:
    get:
      tags:
      - user
      - get
      - list
      description: |
        Gets `User` objects.
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
    post:
      tags:
        - user
        - post
        - create
      summary: Create new user
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object to create
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: Validation exception
  /users/{userId}:
    get:
      tags:
        - user
        - get
      summary: Get user by id
      description: Returns a user with the given id
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          description: ID of user that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: User not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - user
        - put
      summary: Update user by id
      operationId: updateUserById
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          description: ID of user that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: User not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
    delete:
      tags:
        - user
        - delete
      summary: Delete user by id
      operationId: deleteUserById
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          description: ID of user that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: User not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
  /rooms:
    get:
      tags:
      - room
      - get
      - list
      description: |
        Gets `Room` objects.
      parameters:
        -
          name: size
          in: query
          description: Size of array
          required: true
          type: number
          format: double
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Room"
    post:
      tags:
        - room
        - post
        - create
      summary: Create new room
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: room
          description: Room object to create
          schema:
            $ref: "#/definitions/Room"
      responses:
        "405":
          description: Validation exception
  /rooms/{roomId}:
    get:
      tags:
        - room
        - get
      summary: Get room by id
      description: Returns a room with the given id
      operationId: getRoomById
      produces:
        - application/json
      parameters:
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: Room not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Room"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - room
        - put
      summary: Update room by id
      operationId: updateRoomById
      produces:
        - application/json
      parameters:
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: Room not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Room"
        "400":
          description: Invalid ID supplied
    delete:
      tags:
        - room
        - delete
      summary: Delete room by id
      operationId: deleteRoomById
      produces:
        - application/json
      parameters:
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: Room not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Room"
        "400":
          description: Invalid ID supplied
  /rooms/{roomId}/users: 
    get:
      tags:
        - room
        - user
        - get
      summary: Get users added to room
      parameters: 
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: Room not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
    post: 
      tags: 
        - user
        - room
        - post
        - create
      summary: Add users to room
      parameters: 
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
        - in: body
          name: users
          description: List of user ids that should be added to the room
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
        "405":
          description: Invalid input
  /rooms/{roomId}/users/{userId}: 
    delete:
      tags:
        - room
        - user
        - delete
      summary: Removes user from room
      parameters: 
        - in: path
          name: roomId
          description: ID of room that needs to be removed
          required: true
          type: string
        - in: path
          name: userId
          description: ID of user that needs to be removed
          required: true
          type: string
      responses:
        "404":
          description: Room not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
  /rooms/{roomId}/messages:
    get:
      tags: 
        - message
        - get
        - list
      description: |
        Gets messages of room.
      parameters:
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            items: 
              $ref: "#/definitions/Message"
    post:
      tags:
        - message
        - create
        - post
      description: |
        Create new message to room.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: roomId
          description: ID of room that needs to be fetched
          required: true
          type: string
        - in: body
          name: message
          description: Message object that needs to be added to the room
          required: false
          schema:
            $ref: "#/definitions/Message"
      responses:
        "200":
          description: successful operation
        "405":
          description: Invalid input
  /rooms/{roomId}/messages/{messageId}: 
    delete:
      tags:
        - room
        - message
        - delete
      summary: Removes message from room
      parameters: 
        - in: path
          name: roomId
          description: ID of room that needs to be removed
          required: true
          type: string
        - in: path
          name: messageId
          description: ID of message that needs to be removed
          required: true
          type: string
      responses:
        "404":
          description: Room not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Message"
        "400":
          description: Invalid ID supplied
definitions:
  User:
    required: 
    - username
    - password
    properties:
      username: 
        type: string
      firstname:
        type: string
      lastname: 
        type: string
      password: 
        type: string
      imageurl: 
        type: string
  Room:
    required:
      - id
      - name
    properties:
      id:
        type: string
      name:
        type: string
      creatorId: 
        type: string
  Message: 
    properties: 
      id: 
        type: string
      text:
        type: string
      authorId: 
        type: string
